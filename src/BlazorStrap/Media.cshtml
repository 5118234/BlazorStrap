@using Microsoft.AspNetCore.Blazor

@if (MediaType == MediaType.Media)
{
    <div class="@classname" style="@Style">
        @ChildContent
    </div>
}
@if (MediaType == MediaType.Body)
{
    <div class="@classname" style="@Style">
        @ChildContent
    </div>
}
@if (MediaType == MediaType.Heading)
{
    <h5 class="@classname" style="@Style">
        @ChildContent
    </h5>
}
@if (MediaType == MediaType.Image)
{
    <img class="@classname" style="@Style" src="@src" alt="@alt">
}
@if (MediaType == MediaType.List)
{
    <ul class="@classname" style="@Style">
        @ChildContent
    </ul>
}
@if (MediaType == MediaType.ListItem)
{
    <li class="@classname" style="@Style">
        @ChildContent
    </li>
}



@functions {
    string classname
    {
        get
        {
            return $"{GetClass()} {Class}";
        }
    }
    [Parameter] private MediaType MediaType { get; set; } = MediaType.Media;
    [Parameter] private VerticalAlignment VerticalAlignment { get; set; } = VerticalAlignment.None;
    [Parameter] private string src { get; set; }
    [Parameter] private string alt { get; set; }
    [Parameter] private string Class { get; set; }
    [Parameter] private string Style { get; set; }
    [Parameter] private RenderFragment ChildContent { get; set; }

    private string GetVerticalAlignmnet()
    {
        if (VerticalAlignment == VerticalAlignment.Center) return "align-self-center";
        if (VerticalAlignment == VerticalAlignment.Bottom) return "align-self-end";
        if (VerticalAlignment == VerticalAlignment.Bottom) return "align-self-start";
        return null;
    }

    private string GetClass()
    {
        switch (this.MediaType)
        {
            case MediaType.Media:
                return "media";
            case MediaType.Body:
                return "media-body";
            case MediaType.Heading:
                return "mt-0 mb-1";
            case MediaType.Image:
                var verticalAlignment = GetVerticalAlignmnet();
                return $"{verticalAlignment} mr-3";
            case MediaType.List:
                return "list-unstyled";
            case MediaType.ListItem:
                return "media";
            default:
                return "media";
        }
    }
}